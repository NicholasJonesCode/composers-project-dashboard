# Database connection settings # this was at the end of the datasource url, idk why? >> ?jdbcCompliantTruncation=false
spring.datasource.url=jdbc:mysql://localhost:8889/project-manager?jdbcCompliantTruncation=false
spring.datasource.username=project-manager
spring.datasource.password=pm
# SET GLOBAL max_allowed_packet = 10485760;
# ^ if file upload comes through that is bigger than M_A_P, which is deafulted to 1048576 (1MB), then, "com.mysql.jdbc.PacketTooBigException: Packet for query is too large"
# use this query to make sure the cap is 10MB

# Specify the DBMS
spring.jpa.database = MYSQL

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#UNTIL CONFIGURATION LATE
spring.session.store-type=none

#DONT RESTART APP WHEN I LOAD FILES INTO THE RESOURCES/FILES FOLDER
spring.devtools.restart.additional-exclude=files/**

#Make sure that tomcat allows all file sizes in so that it can go thru and be caught at the controller level
#to catch exceeding file size limits, before it hits the sql max_allowed_packet (5mb).
spring.http.multipart.max-file-size= -1
spring.http.multipart.max-request-size= -1

# https://stackoverflow.com/questions/13599821/autowired-repository-is-null-in-custom-constraint-validator#13620903
# https://stackoverflow.com/questions/26764532/how-to-disable-hibernate-validation-in-a-spring-boot-project#26809261
# basically the lifecycle of the different validations (java, spring, hibernate, etc) was making my userDao be null in my UniqueUsernameValidator. This fixes it somehow idek.
spring.jpa.properties.javax.persistence.validation.mode=none